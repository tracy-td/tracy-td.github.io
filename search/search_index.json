{"config":{"indexing":"full","lang":["pt"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documenta\u00e7\u00e3o: Tracy-TD Ger\u00eancia de D\u00edvidas T\u00e9cnicas Orientada a Neg\u00f3cios subt\u00edtulo acesse: http://ayty.org Contribuindo \u00cdndice: Iniciando Obtendo ajuda Come\u00e7ando a contribuir Iniciando o desnvolvimento Criando uma issue Atribuindo uma issue Contribuindo com o c\u00f3digo Contribuindo com a documenta\u00e7\u00e3o Implementa\u00e7\u00e3o dos testes Iniciando Aconcelhamos que ap\u00f3s a leitura desse arquivo, voc\u00ea de uma olhada nas issues iniciais do projeto, e siga os exemplos de como contribuir com o c\u00f3digo. Obtendo ajuda A comunidade de contribui\u00e7\u00f5es da Tracy-TD possui um canal de comunica\u00e7\u00e3o no Discord , assim novos integrantes podem tirar suas d\u00favidas e interagir com outros membros. Come\u00e7ando a contribuir Para voc\u00ea que \u00e9 iniciante, sugerimos que pegue uma issue simples, para come\u00e7ar a se familiarizar com o projeto, as issue para os iniciantes se encontram neste link (COLOCAR O LINK), essas issues possuem a Labels de \"good first issue\". Iniciando o desenvolvimento Para iniciar o desenvolvimento \u00e9 necess\u00e1rio criar uma branch, existe como padr\u00e3o, dois tipos de branchs, feature e bugfix: feature: Prefixo de branch para nova funcionalidade ou melhoria; Nova funcionalidade: Uma nova fun\u00e7\u00e3o para a API a qual ainda n\u00e3o existe; Melhoria: Melhoria de uma fun\u00e7\u00e3o j\u00e1 existente ou parte do c\u00f3digo. bugfix: Prefixo de branch que corrige algum bug em c\u00f3digo. Sabendo dos prefixos de cada tipo de issue, preencha o sufixo do nome da branch com \"/#\" seguido do n\u00famero da Issue. Exemplo: \"feature/#xxxx\", \"bugfix/#yyyy\". Criando uma branch via terminal: - git checkout - b \\ - Esse comando cria a branch com o nome passado no par\u00e2metro (n\u00e3o utilizar os \"<>\") e ainda troca para branch atual de uso. Criando issue Se voc\u00ea encontrou algum bug ou quer sugerir alguma funcionalidade, voc\u00ea pode criar uma issue nesse LINK (botar o link) Para criar uma nova Issue, voc\u00ea pode seguir os seguintes passos, todos os passos a seguir come\u00e7am ao acessar a aba de Issues , ou j\u00e1 no template de New issue do reposit\u00f3rio: Dentro do template de New issue, no input de \"Title\", escreva brevimente o que a nova issue deve fazer, e ent\u00e3o no input de \"Leave a comment\", fa\u00e7a uma descri\u00e7\u00e3o mais detalhada sobre como a issue deve ser executada/implementada. Ap\u00f3s as especifica\u00e7\u00f5es da nova issue, ao lado direito existe alguns complementos importantes: - Em \"Assignees\" voc\u00ea pode escolher a pessoa respons\u00e1vel para a execu\u00e7\u00e3o da issue, caso o objetivo seja apenas deixar a issue registrada, n\u00e3o precisa atribuir, caso queira pegar uma issue, siga para se\u00e7\u00e3o atribuindo uma issue . - Em \"Labels\" voc\u00ea define que tipo de feature e caracteristica essa issue possui, como \"bug\", para uma issue referente a um bug no sistema, \"documentation\" issue que mexe com algum arquivo refente a documenta\u00e7\u00e3o do projeto, \"enhancement\", para issue referente a uma nova feature ou melhoria para o sistema, existem varias labels e. Issue podem receber varias labels e n\u00e3o s\u00e3o obrigat\u00f3rias para a cria\u00e7\u00e3o de uma. Ap\u00f3s esses passos a sua issue est\u00e1 pronta para ser criada, clique em \"Submite new issue\" e receba a nova issue com um \"#\" seguido de um valor num\u00e9rico, um identificador para a issue, e este identificador ser\u00e1 utilizado no coment\u00e1rio do seu Pull Request para ser feito o link entre a issue e o Pull Request. Atribuindo uma issue Para atribuir uma issue, voc\u00ea precisa acessa a aba de Issues , ao selecionar uma issue, ela ser\u00e1 aberta e poder\u00e1 receber atribui\u00e7\u00e3o(\u00f5es) ao clicar em \"Assignees\", ent\u00e3o selecionar quem dever\u00e1 fazer parte do desenvolvimento dessa issue. Lembrando que em Assigness, n\u00e3o ser\u00e3o as mesmas pessoas que ir\u00e3o revisar o seu Pull Request . Fazendo Pull Request Ao concluir a sua contribui\u00e7\u00e3o \u00e9 hora de fazer o famoso Pull Request, onde ele ser\u00e1 revisado pela comunidade e ent\u00e3o, se tudo estiver de acordo com as expectativas dos revisadores o Pull Request ser\u00e1 aceito. Mas para isso, \u00e9 preciso seguir alguns passos primeiro, \u00e9 preciso preparar os arquivos que ser\u00e3o adicionados para o commit e consequentemente para o Pull Request/Revis\u00e3o, com os seguintes passos no terminal: git add \"{nome do arquivo}\" ou git add . , que adiciona o arquivo menscionado ou todos os arquivos salvos e modificados ao Stage, tamb\u00e9m pode ser chamado de Index ou Staging Area: O Staging Area \u00e9 um lugar onde os arquivos est\u00e3o sendo preparados para o commit. git commit -m \"{mensagem do commit}\" , com esse comando voc\u00ea transfere seus arquivos para o diret\u00f3rio local do git com uma mensagem sobre o commit, muito importante que essa mensagem contenha informa\u00e7\u00f5es sobre as altera\u00e7\u00f5es feitas e referencie a issue associada a contribui\u00e7\u00e3o: A mensagem do commit deve conter uma refer\u00eancia a issue, essa refer\u00eancia \u00e9 feita atraves de # seguido do n\u00famero de identifica\u00e7\u00e3o da issue no github, seguido de uma breve descri\u00e7\u00e3o do que foi feito. git push , com o git push, os arquivos ser\u00e3o enviados para o reposit\u00f3rio da nuvem do github: \u00c9 possivel que pe\u00e7a suas credenciais, informe elas e continue o procedimento; Caso a branch ainda n\u00e3o exista no reposit\u00f3rio do github, ser\u00e1 exibido uma mensagem para no terminal para publicar a branch, copie a mensagem e execute para subir suas altera\u00e7\u00f5es; No reposit\u00f3rio do github do projeto, ao estar logado com as credenciais iguais as informadas, ser\u00e1 exibido uma mensagem informado que existe um Pull Request para ser solicitado... Contribuindo com o c\u00f3digo Para contribui\u00e7\u00e3o de c\u00f3digo temos 3 categorias para uma issue: - Nova funcionalidade, s\u00e3o acressimos de novas fun\u00e7\u00f5es ou recursos que ainda n\u00e3o existem no projeto, e possui como titulo da branch \"feature\". - Melhoria, s\u00e3o mudna\u00e7as em fun\u00e7\u00f5es ou recursos que \u00e1 existem no projeto, possuindo o titulo de branch \"feature\". - Bug, os bugs s\u00e3o dividos em dois, cr\u00edticos e n\u00e3o cr\u00edticos, ambos possuiem o titulo de branch \"bugfix\": - Cr\u00edticos, afetam gravimente alguma funcionalidade importante do sistema, o que torna a aplica\u00e7\u00e3o inutilizavel ou de dificil acesso. - N\u00e3o cr\u00edticos, s\u00e3o os bugs que causam apenas um leve incomodo na aplica\u00e7\u00e3o, onde n\u00e3o chegam a causar tanto impacto na funcionalidade. Contribuindo com a documenta\u00e7\u00e3o A documenta\u00e7\u00e3o de um software sempre muda de acordo com as novas funcionalidades que s\u00e3o desenvolvidas, desta forma, atualiza\u00e7\u00f5es s\u00e3o necess\u00e1rias para que o software e documenta\u00e7\u00e3o estejam sempre alinhados, essa \u00e9 um tipo de contribui\u00e7\u00e3o importante para manter a integridade entre os desenvolvedores e quem faz uso da ferramenta. Veja a documenta\u00e7\u00e3o aqui.(COLOCAR LINK) Outros arquivos como o README, C\u00f3digo de condulta e o este guia de contribui\u00e7\u00f5es podem receber novas altera\u00e7\u00f5es se forem necess\u00e1rias, abra uma issue e comece a contribuir agora mesmo. Como criar um relat\u00f3rio de bug Implementa\u00e7\u00e3o dos testes TODO isso aqui \u00e9 um md a parte que terar um link para ser acessado daqui","title":"Documenta\u00e7\u00e3o: Tracy-TD"},{"location":"#documentacao-tracy-td","text":"Ger\u00eancia de D\u00edvidas T\u00e9cnicas Orientada a Neg\u00f3cios","title":"Documenta\u00e7\u00e3o: Tracy-TD"},{"location":"#subtitulo","text":"acesse: http://ayty.org","title":"subt\u00edtulo"},{"location":"#contribuindo","text":"","title":"Contribuindo"},{"location":"#indice","text":"Iniciando Obtendo ajuda Come\u00e7ando a contribuir Iniciando o desnvolvimento Criando uma issue Atribuindo uma issue Contribuindo com o c\u00f3digo Contribuindo com a documenta\u00e7\u00e3o Implementa\u00e7\u00e3o dos testes","title":"\u00cdndice:"},{"location":"#iniciando","text":"Aconcelhamos que ap\u00f3s a leitura desse arquivo, voc\u00ea de uma olhada nas issues iniciais do projeto, e siga os exemplos de como contribuir com o c\u00f3digo.","title":"Iniciando"},{"location":"#obtendo-ajuda","text":"A comunidade de contribui\u00e7\u00f5es da Tracy-TD possui um canal de comunica\u00e7\u00e3o no Discord , assim novos integrantes podem tirar suas d\u00favidas e interagir com outros membros.","title":"Obtendo ajuda"},{"location":"#comecando-a-contribuir","text":"Para voc\u00ea que \u00e9 iniciante, sugerimos que pegue uma issue simples, para come\u00e7ar a se familiarizar com o projeto, as issue para os iniciantes se encontram neste link (COLOCAR O LINK), essas issues possuem a Labels de \"good first issue\".","title":"Come\u00e7ando a contribuir"},{"location":"#iniciando-o-desenvolvimento","text":"Para iniciar o desenvolvimento \u00e9 necess\u00e1rio criar uma branch, existe como padr\u00e3o, dois tipos de branchs, feature e bugfix: feature: Prefixo de branch para nova funcionalidade ou melhoria; Nova funcionalidade: Uma nova fun\u00e7\u00e3o para a API a qual ainda n\u00e3o existe; Melhoria: Melhoria de uma fun\u00e7\u00e3o j\u00e1 existente ou parte do c\u00f3digo. bugfix: Prefixo de branch que corrige algum bug em c\u00f3digo. Sabendo dos prefixos de cada tipo de issue, preencha o sufixo do nome da branch com \"/#\" seguido do n\u00famero da Issue. Exemplo: \"feature/#xxxx\", \"bugfix/#yyyy\". Criando uma branch via terminal: - git checkout - b \\ - Esse comando cria a branch com o nome passado no par\u00e2metro (n\u00e3o utilizar os \"<>\") e ainda troca para branch atual de uso.","title":"Iniciando o desenvolvimento"},{"location":"#criando-issue","text":"Se voc\u00ea encontrou algum bug ou quer sugerir alguma funcionalidade, voc\u00ea pode criar uma issue nesse LINK (botar o link) Para criar uma nova Issue, voc\u00ea pode seguir os seguintes passos, todos os passos a seguir come\u00e7am ao acessar a aba de Issues , ou j\u00e1 no template de New issue do reposit\u00f3rio: Dentro do template de New issue, no input de \"Title\", escreva brevimente o que a nova issue deve fazer, e ent\u00e3o no input de \"Leave a comment\", fa\u00e7a uma descri\u00e7\u00e3o mais detalhada sobre como a issue deve ser executada/implementada. Ap\u00f3s as especifica\u00e7\u00f5es da nova issue, ao lado direito existe alguns complementos importantes: - Em \"Assignees\" voc\u00ea pode escolher a pessoa respons\u00e1vel para a execu\u00e7\u00e3o da issue, caso o objetivo seja apenas deixar a issue registrada, n\u00e3o precisa atribuir, caso queira pegar uma issue, siga para se\u00e7\u00e3o atribuindo uma issue . - Em \"Labels\" voc\u00ea define que tipo de feature e caracteristica essa issue possui, como \"bug\", para uma issue referente a um bug no sistema, \"documentation\" issue que mexe com algum arquivo refente a documenta\u00e7\u00e3o do projeto, \"enhancement\", para issue referente a uma nova feature ou melhoria para o sistema, existem varias labels e. Issue podem receber varias labels e n\u00e3o s\u00e3o obrigat\u00f3rias para a cria\u00e7\u00e3o de uma. Ap\u00f3s esses passos a sua issue est\u00e1 pronta para ser criada, clique em \"Submite new issue\" e receba a nova issue com um \"#\" seguido de um valor num\u00e9rico, um identificador para a issue, e este identificador ser\u00e1 utilizado no coment\u00e1rio do seu Pull Request para ser feito o link entre a issue e o Pull Request.","title":"Criando issue"},{"location":"#atribuindo-uma-issue","text":"Para atribuir uma issue, voc\u00ea precisa acessa a aba de Issues , ao selecionar uma issue, ela ser\u00e1 aberta e poder\u00e1 receber atribui\u00e7\u00e3o(\u00f5es) ao clicar em \"Assignees\", ent\u00e3o selecionar quem dever\u00e1 fazer parte do desenvolvimento dessa issue. Lembrando que em Assigness, n\u00e3o ser\u00e3o as mesmas pessoas que ir\u00e3o revisar o seu Pull Request .","title":"Atribuindo uma issue"},{"location":"#fazendo-pull-request","text":"Ao concluir a sua contribui\u00e7\u00e3o \u00e9 hora de fazer o famoso Pull Request, onde ele ser\u00e1 revisado pela comunidade e ent\u00e3o, se tudo estiver de acordo com as expectativas dos revisadores o Pull Request ser\u00e1 aceito. Mas para isso, \u00e9 preciso seguir alguns passos primeiro, \u00e9 preciso preparar os arquivos que ser\u00e3o adicionados para o commit e consequentemente para o Pull Request/Revis\u00e3o, com os seguintes passos no terminal: git add \"{nome do arquivo}\" ou git add . , que adiciona o arquivo menscionado ou todos os arquivos salvos e modificados ao Stage, tamb\u00e9m pode ser chamado de Index ou Staging Area: O Staging Area \u00e9 um lugar onde os arquivos est\u00e3o sendo preparados para o commit. git commit -m \"{mensagem do commit}\" , com esse comando voc\u00ea transfere seus arquivos para o diret\u00f3rio local do git com uma mensagem sobre o commit, muito importante que essa mensagem contenha informa\u00e7\u00f5es sobre as altera\u00e7\u00f5es feitas e referencie a issue associada a contribui\u00e7\u00e3o: A mensagem do commit deve conter uma refer\u00eancia a issue, essa refer\u00eancia \u00e9 feita atraves de # seguido do n\u00famero de identifica\u00e7\u00e3o da issue no github, seguido de uma breve descri\u00e7\u00e3o do que foi feito. git push , com o git push, os arquivos ser\u00e3o enviados para o reposit\u00f3rio da nuvem do github: \u00c9 possivel que pe\u00e7a suas credenciais, informe elas e continue o procedimento; Caso a branch ainda n\u00e3o exista no reposit\u00f3rio do github, ser\u00e1 exibido uma mensagem para no terminal para publicar a branch, copie a mensagem e execute para subir suas altera\u00e7\u00f5es; No reposit\u00f3rio do github do projeto, ao estar logado com as credenciais iguais as informadas, ser\u00e1 exibido uma mensagem informado que existe um Pull Request para ser solicitado...","title":"Fazendo Pull Request"},{"location":"#contribuindo-com-o-codigo","text":"Para contribui\u00e7\u00e3o de c\u00f3digo temos 3 categorias para uma issue: - Nova funcionalidade, s\u00e3o acressimos de novas fun\u00e7\u00f5es ou recursos que ainda n\u00e3o existem no projeto, e possui como titulo da branch \"feature\". - Melhoria, s\u00e3o mudna\u00e7as em fun\u00e7\u00f5es ou recursos que \u00e1 existem no projeto, possuindo o titulo de branch \"feature\". - Bug, os bugs s\u00e3o dividos em dois, cr\u00edticos e n\u00e3o cr\u00edticos, ambos possuiem o titulo de branch \"bugfix\": - Cr\u00edticos, afetam gravimente alguma funcionalidade importante do sistema, o que torna a aplica\u00e7\u00e3o inutilizavel ou de dificil acesso. - N\u00e3o cr\u00edticos, s\u00e3o os bugs que causam apenas um leve incomodo na aplica\u00e7\u00e3o, onde n\u00e3o chegam a causar tanto impacto na funcionalidade.","title":"Contribuindo com o c\u00f3digo"},{"location":"#contribuindo-com-a-documentacao","text":"A documenta\u00e7\u00e3o de um software sempre muda de acordo com as novas funcionalidades que s\u00e3o desenvolvidas, desta forma, atualiza\u00e7\u00f5es s\u00e3o necess\u00e1rias para que o software e documenta\u00e7\u00e3o estejam sempre alinhados, essa \u00e9 um tipo de contribui\u00e7\u00e3o importante para manter a integridade entre os desenvolvedores e quem faz uso da ferramenta. Veja a documenta\u00e7\u00e3o aqui.(COLOCAR LINK) Outros arquivos como o README, C\u00f3digo de condulta e o este guia de contribui\u00e7\u00f5es podem receber novas altera\u00e7\u00f5es se forem necess\u00e1rias, abra uma issue e comece a contribuir agora mesmo.","title":"Contribuindo com a documenta\u00e7\u00e3o"},{"location":"#como-criar-um-relatorio-de-bug","text":"","title":"Como criar um relat\u00f3rio de bug"},{"location":"#implementacao-dos-testes","text":"TODO isso aqui \u00e9 um md a parte que terar um link para ser acessado daqui","title":"Implementa\u00e7\u00e3o dos testes"},{"location":"config/tracy-api-installation/","text":"Instala\u00e7\u00e3o - Tracy API Requisitos Para construir e executar a aplica\u00e7\u00e3o, voc\u00ea precisa de: Java Jre 8 Java JDK 11 PostgresSQL 11.5 Git Intellij IDE (Para uso com a parte de back end) Vs Code IDE (Se desejar usar na parte de front end. Caso contr\u00e1rio, o intelijj pode ser usado tamb\u00e9m) Maven (Baixe o arquivo Bynary.zip) CMD ou Windows Powershell Tutorial de instala\u00e7\u00e3o Tenha certeza que voc\u00ea j\u00e1 instalou todos os requisitos e, depois disso, siga os passos abaixo. Primeiro Passo: Backend Clonar os reposit\u00f3rios (Em caso de problemas usando o git bash, tentar pelo terminal cmd). Execute mvn clean install Criar o banco de dados no postgres nomeado tracytd Abrir o c\u00f3digo da api no Intellij. Dentro dos arquivos da api rest, criar um arquivo nomeado application-dev.yml (Caminho src > main > resources) Colar dentro do arquivo o seguinte c\u00f3digo: spring: datasource: url: jdbc:postgresql://localhost:5432/tracytd username: postgres password: tuasenha (substituir pela senha do postgres) Executar o comando mvn clean install no terminal do intellij. No intellij, ir at\u00e9 o menu Add Configuration, adicionar uma nova configura\u00e7\u00e3o (sinal + no canto superior esquerdo), selecionando a op\u00e7\u00e3o \"application\" No menu seguinte, complete os campos com essas instru\u00e7\u00f5es: name: \"tracy-api\" main class: procure a classe \"tracy application\" No campo \"Modify options\", escolha a op\u00e7\u00e3o \"Add vm options\", e no campo com o mesmo nome, cole o seguinte c\u00f3digo: -Dspring.profiles.active=dev Depois disso, clique em aplicar e ok. Se o campo \"Add configuration\" n\u00e3o mudar automaticamente, mude ele para a nova configura\u00e7\u00e3o. Rode o projeto! Segundo passo: Front End Clone o reposit\u00f3rio tracy-front. (Em caso de problemas com a funcionalidade do git bash voc\u00ea pode usar o cmd para fazer isso) Abra o projeto com o Vs Code e execute o comando npm i . Isso vai levar alguns minutos para executar. Ap\u00f3s o t\u00e9rmino, execute o comando ng s . Isso vai demorar um pouco mais. Depois que terminar, abra seu navegador e v\u00e1 para \"localhost: 4200\" Coloque o login \"admin@tracytd.org\", e a senha \"rootadmin\" Est\u00e1 pronto! Como conseguir ajuda? Voc\u00ea dever\u00e1 acessar o canal do Discord , onde ter\u00e1 acesso aos desenvolvedores trabalhando no projeto, assim como outras pessoas que est\u00e3o usando Tracy em suas empresas. Gerenciamento de contribui\u00e7\u00f5es O projeto tem um conselho de gest\u00e3o do que deve ou n\u00e3o ser priorizado. Esse conjunto de desenvolvedores \u00e9 formado por pessoas com experi\u00eancia no c\u00f3digo e no produto. Com o tempo, voc\u00ea tamb\u00e9m poder\u00e1 ajudar ingressando no conselho de administra\u00e7\u00e3o. Processo de desenvolvimento do projeto Registro de uma edi\u00e7\u00e3o (issue); Once registered, the issue can receive comments from other people, to detail and improve the description of the new enhancement request, new feature or bug to be solved. Anyone can take up an open issue and implement their solution. Uma vez registrada, a edi\u00e7\u00e3o pode receber coment\u00e1rios de outras pessoas, para detalhar e melhorar a descri\u00e7\u00e3o da nova solicita\u00e7\u00e3o de aprimoramento, novo recurso ou bug para ser resolvido. Qualquer um pode assumir um problema aberto e implementar sua solu\u00e7\u00e3o. Atribui\u00e7\u00e3o de uma Edi\u00e7\u00e3o ; In Issues you will have the entire backlog of the project, and by clicking on an issue, you can assign it, in \"Assigness\". So, it will be your development responsibility. follow the guidelines on how to create a branch and make a pull request. Em edi\u00e7\u00f5es voc\u00ea ter\u00e1 todo os registros acumulados do projeto e, clicando em uma edi\u00e7\u00e3o, voc\u00ea pode atribuir ela em \"Atribuir\". Ent\u00e3o, ela ser\u00e1 sua responsabilidade de desenvolvimento. Siga as orienta\u00e7\u00f5es sobre como criar uma branch e fazer uma solicita\u00e7\u00e3o. (Pull request). Criando branch; To start development it is necessary to create a branch. There are, by default, three types of branches: hot, feat and bugfix: - hot -> hotfix: Branch prefix for quick and small code change; - feat -> feature: Branch prefix for new feature or improvement; - bugfix -> Branch prefix that fixes some bug in code. Knowing the prefixes for each issue type, fill in the branch name suffix with \"/#\", followed by the Issue number. Example: \"hot/#xxxx\", \"feat/#yyyy\", \"bugfix/#zzzz\". Para come\u00e7ar o desenvolvimento \u00e9 necess\u00e1rio criar uma branch. Aqui est\u00e3o, por padr\u00e3o, tr\u00eas tipos de branch: hot, feat e bugfix: - hot -> hotfix: Prefico de branch para pequenas e r\u00e1pidas mudan\u00e3s de c\u00f3digo. - feat -> feature: Prefixo de branch para nova funcionalidade ou aprimoramento. - bugfix -> Prefixo de branch que conserta algum tipo de bug no c\u00f3digo. Conhecendo os prefixos para cada tipo de edi\u00e7\u00e3o, complete o sufixo do nome da branch com \"/#\", seguido do n\u00famero da edi\u00e7\u00e3o. Exemplo: \"hot/#xxxx\", \"feat/#yyyy\", \"bugfix/#zzzz\". Fazendo Pull Request; Ap\u00f3s implementar sua solu\u00e7\u00e3o \u00e9 hora de fazer o Pull Request...","title":"Instala\u00e7\u00e3o - Tracy API"},{"location":"config/tracy-api-installation/#instalacao-tracy-api","text":"","title":"Instala\u00e7\u00e3o - Tracy API"},{"location":"config/tracy-api-installation/#requisitos","text":"Para construir e executar a aplica\u00e7\u00e3o, voc\u00ea precisa de: Java Jre 8 Java JDK 11 PostgresSQL 11.5 Git Intellij IDE (Para uso com a parte de back end) Vs Code IDE (Se desejar usar na parte de front end. Caso contr\u00e1rio, o intelijj pode ser usado tamb\u00e9m) Maven (Baixe o arquivo Bynary.zip) CMD ou Windows Powershell","title":"Requisitos"},{"location":"config/tracy-api-installation/#tutorial-de-instalacao","text":"Tenha certeza que voc\u00ea j\u00e1 instalou todos os requisitos e, depois disso, siga os passos abaixo.","title":"Tutorial de instala\u00e7\u00e3o"},{"location":"config/tracy-api-installation/#primeiro-passo-backend","text":"Clonar os reposit\u00f3rios (Em caso de problemas usando o git bash, tentar pelo terminal cmd). Execute mvn clean install Criar o banco de dados no postgres nomeado tracytd Abrir o c\u00f3digo da api no Intellij. Dentro dos arquivos da api rest, criar um arquivo nomeado application-dev.yml (Caminho src > main > resources) Colar dentro do arquivo o seguinte c\u00f3digo: spring: datasource: url: jdbc:postgresql://localhost:5432/tracytd username: postgres password: tuasenha (substituir pela senha do postgres) Executar o comando mvn clean install no terminal do intellij. No intellij, ir at\u00e9 o menu Add Configuration, adicionar uma nova configura\u00e7\u00e3o (sinal + no canto superior esquerdo), selecionando a op\u00e7\u00e3o \"application\" No menu seguinte, complete os campos com essas instru\u00e7\u00f5es: name: \"tracy-api\" main class: procure a classe \"tracy application\" No campo \"Modify options\", escolha a op\u00e7\u00e3o \"Add vm options\", e no campo com o mesmo nome, cole o seguinte c\u00f3digo: -Dspring.profiles.active=dev Depois disso, clique em aplicar e ok. Se o campo \"Add configuration\" n\u00e3o mudar automaticamente, mude ele para a nova configura\u00e7\u00e3o. Rode o projeto!","title":"Primeiro Passo: Backend"},{"location":"config/tracy-api-installation/#segundo-passo-front-end","text":"Clone o reposit\u00f3rio tracy-front. (Em caso de problemas com a funcionalidade do git bash voc\u00ea pode usar o cmd para fazer isso) Abra o projeto com o Vs Code e execute o comando npm i . Isso vai levar alguns minutos para executar. Ap\u00f3s o t\u00e9rmino, execute o comando ng s . Isso vai demorar um pouco mais. Depois que terminar, abra seu navegador e v\u00e1 para \"localhost: 4200\" Coloque o login \"admin@tracytd.org\", e a senha \"rootadmin\" Est\u00e1 pronto!","title":"Segundo passo: Front End"},{"location":"config/tracy-api-installation/#como-conseguir-ajuda","text":"Voc\u00ea dever\u00e1 acessar o canal do Discord , onde ter\u00e1 acesso aos desenvolvedores trabalhando no projeto, assim como outras pessoas que est\u00e3o usando Tracy em suas empresas.","title":"Como conseguir ajuda?"},{"location":"config/tracy-api-installation/#gerenciamento-de-contribuicoes","text":"O projeto tem um conselho de gest\u00e3o do que deve ou n\u00e3o ser priorizado. Esse conjunto de desenvolvedores \u00e9 formado por pessoas com experi\u00eancia no c\u00f3digo e no produto. Com o tempo, voc\u00ea tamb\u00e9m poder\u00e1 ajudar ingressando no conselho de administra\u00e7\u00e3o.","title":"Gerenciamento de contribui\u00e7\u00f5es"},{"location":"config/tracy-api-installation/#processo-de-desenvolvimento-do-projeto","text":"Registro de uma edi\u00e7\u00e3o (issue); Once registered, the issue can receive comments from other people, to detail and improve the description of the new enhancement request, new feature or bug to be solved. Anyone can take up an open issue and implement their solution. Uma vez registrada, a edi\u00e7\u00e3o pode receber coment\u00e1rios de outras pessoas, para detalhar e melhorar a descri\u00e7\u00e3o da nova solicita\u00e7\u00e3o de aprimoramento, novo recurso ou bug para ser resolvido. Qualquer um pode assumir um problema aberto e implementar sua solu\u00e7\u00e3o. Atribui\u00e7\u00e3o de uma Edi\u00e7\u00e3o ; In Issues you will have the entire backlog of the project, and by clicking on an issue, you can assign it, in \"Assigness\". So, it will be your development responsibility. follow the guidelines on how to create a branch and make a pull request. Em edi\u00e7\u00f5es voc\u00ea ter\u00e1 todo os registros acumulados do projeto e, clicando em uma edi\u00e7\u00e3o, voc\u00ea pode atribuir ela em \"Atribuir\". Ent\u00e3o, ela ser\u00e1 sua responsabilidade de desenvolvimento. Siga as orienta\u00e7\u00f5es sobre como criar uma branch e fazer uma solicita\u00e7\u00e3o. (Pull request). Criando branch; To start development it is necessary to create a branch. There are, by default, three types of branches: hot, feat and bugfix: - hot -> hotfix: Branch prefix for quick and small code change; - feat -> feature: Branch prefix for new feature or improvement; - bugfix -> Branch prefix that fixes some bug in code. Knowing the prefixes for each issue type, fill in the branch name suffix with \"/#\", followed by the Issue number. Example: \"hot/#xxxx\", \"feat/#yyyy\", \"bugfix/#zzzz\". Para come\u00e7ar o desenvolvimento \u00e9 necess\u00e1rio criar uma branch. Aqui est\u00e3o, por padr\u00e3o, tr\u00eas tipos de branch: hot, feat e bugfix: - hot -> hotfix: Prefico de branch para pequenas e r\u00e1pidas mudan\u00e3s de c\u00f3digo. - feat -> feature: Prefixo de branch para nova funcionalidade ou aprimoramento. - bugfix -> Prefixo de branch que conserta algum tipo de bug no c\u00f3digo. Conhecendo os prefixos para cada tipo de edi\u00e7\u00e3o, complete o sufixo do nome da branch com \"/#\", seguido do n\u00famero da edi\u00e7\u00e3o. Exemplo: \"hot/#xxxx\", \"feat/#yyyy\", \"bugfix/#zzzz\". Fazendo Pull Request; Ap\u00f3s implementar sua solu\u00e7\u00e3o \u00e9 hora de fazer o Pull Request...","title":"Processo de desenvolvimento do projeto"},{"location":"config/tracy-front-instalation/","text":"Instala\u00e7\u00e3o - Tracy Front % TO DO","title":"Instala\u00e7\u00e3o - Tracy Front"},{"location":"config/tracy-front-instalation/#instalacao-tracy-front","text":"% TO DO","title":"Instala\u00e7\u00e3o - Tracy Front"},{"location":"config/tracy-td_architecture/","text":"Arquitetura","title":"Arquitetura"},{"location":"config/tracy-td_architecture/#arquitetura","text":"","title":"Arquitetura"}]}